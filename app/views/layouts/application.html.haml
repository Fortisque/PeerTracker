!!!
%html
  %head
    %link{:href => "http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,400&subset=cyrillic-ext,latin", :rel => "stylesheet", :type => "text/css"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %title PeerTracker
    = stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true
    = javascript_include_tag 'application', 'data-turbolinks-track' => true
    = csrf_meta_tags

  %body
    %nav.navbar.navbar-default
      .container
        %ul.nav.navbar-nav
          .navbar-brand= link_to "PeerTracker", root_path
          -if user_signed_in?
            %li.dropdown{:role => "presentation"}
              %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                Courses
                %span.caret
              %ul.dropdown-menu{:role => "menu"}
                -for course in current_user.courses
                  -if current_user.has_role? :professor or current_user.has_role? :instructor
                    -#%li= link_to "#{course.course_name} Assignments", all_assignments_path(course.id)
                  - else
                    %li= link_to "#{course.course_name}", course_path(course.id)
                %li.divider
                  %li.active= link_to "All Courses", courses_path

            %li.dropdown{:role => "presentation"}
              %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                - if current_user.has_role? :student
                  Assignments
                - else
                  Teams
                -if current_user.has_role? :instructor
                  %span.badge= current_user.teams.count
                -if current_user.has_role? :professor
                  %span.badge= current_user.courses.count
                %span.caret

              %ul.dropdown-menu{:role => "menu"}
                -for team in current_user.teams
                  %li= link_to "#{team.name}", course_team_path(:course_id => team.course.id, :id => team.id)
                -if !current_user.has_role? :student
                  %li.divider
                  -if !current_user.courses[0].nil? and !current_user.has_role? :student
                    -for course in current_user.courses
                      %li= link_to "#{course.course_name} Teams", course_teams_path(:course_id => course.id)
                  %li.divider
                  %li.active= link_to "All Students", users_path


            %li.dropdown{:role => "presentation"}
              %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                -if current_user.has_role? :student
                  Feedbacks
                -else
                  View Team Feedbacks
                -if !current_user.has_role? :student
                  -count_assignment = 0
                %span.caret
              %ul.dropdown-menu{:role => "menu"}
                -for course in current_user.courses
                  %li.disabled{:role => "presentation"}= link_to "#{course.course_name}"
                  -if current_user.has_role? :student
                    -for assignment in course.assignments
                      - if assignment.deadline > Time.zone.now 
                        -teams = Team.where(:course_id => course.id)
                        -for team in teams
                          -if team.users.include? current_user
                            %li{align: :left}= link_to "#{assignment.assignment_name}", course_team_assignment_path(:course_id => course.id, :team_id => team.id, :id => assignment.id)
                  -else
                    -for assignment in course.assignments
                      %li{align: :left}= link_to "#{assignment.assignment_name}", show_assignment_path(:course_id => course.id, :id => assignment.id)
                      -#if assignment.deadline > Time.zone.now
                        %li{align: :left}= link_to "#{assignment.assignment_name}", edit_course_assignment_path(:course_id => course.id, :id => assignment.id)
                    %li.active= link_to "All #{course.course_name} Assignments", all_assignments_path(:course_id => course.id)
                    -#%li.active= link_to "Add Assignment", new_course_assignment_path(:course_id => course.id)

        -if user_signed_in?
          %ul.nav.navbar-nav.navbar-right
            %li.active= link_to "#{current_user.full_name}"
            %li= link_to "#{current_user.roles[0].name.to_s.capitalize} Account", edit_user_registration_path
            %li= link_to "Sign Out", destroy_user_session_path, method: :delete
        -else
          %ul.nav.navbar-nav.navbar-right
            %li= link_to "Sign Up", new_user_registration_path
            %li= link_to "Sign In", new_user_session_path
    


    .container
    - flash.each do |name,msg|
      = content_tag :div, msg, :class => "#{bootstrap_class_for(name)}"
    = yield

  :css

    .navbar-nav
    {
      width: auto;
    }
    .navbar-brand
    {
      margin-left:3px !important;
    }
    .navbar-right
    {
      margin-right:50px !important;
    }
    .alert, .error, .notice, .success { padding:.8em 0; margin:0 0 2px 0; border:2px solid #ddd; font-size:1.1em; width: 40%; text-align: center;margin-left: auto; margin-right: auto; border-radius: 5px;}

    .error { background:#FBE3E4;color:#8a1f11;border-color:#FBC2C4; }
    .notice {background:AngelBlue;color:SteelBlue;border-color:SteelBlue; }
    .success { font-color:#000; background:#DDFCD5;color:#000;border-color:SteelBlue; }
    .alert { background:#FBE3E4;color:#8a1f11;border-color:#FBC2C4; }
